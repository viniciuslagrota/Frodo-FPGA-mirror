/*
 * keccak-f1600.c

 *
 *  Created on: 30 de nov de 2019
 *      Author: Vinicius
 */

#include "keccak_f1600.h"

void keccak_f1600_func(uint64_t * state)
{
	xil_printf_macro("Frodo init\n");

	// ------ Variables ------
	u32 readGpio = 0x0;
	u32 readTimer;
	float fval;
	u32 whole, thousandths;

	//Sending data
	for(u32 i = 0; i < PACKET_SIZE; i++)
	{
//		xil_printf_macro("\tSent data %d: 0x%x\n", i, u32TxWordVec[i]);
		if(XLlFifo_iTxVacancy(&fifoKeccak))
			XLlFifo_TxPutWord(&fifoKeccak, u32TxWordVec[i]);
	}

	//Start Transmission by writing transmission length into the TLR
	XLlFifo_iTxSetLen(&fifoKeccak, PACKET_SIZE*4);

	//Check for Transmission completion
	while(!(XLlFifo_IsTxDone(&fifoKeccak))){}
//	xil_printf_macro("Transmission completed.\n");

	//Reading done bit
	readGpio = XGpio_DiscreteRead(&axiStartDone, 1); //Check done pin
	while(readGpio == 0x0)
	{
		readGpio = XGpio_DiscreteRead(&axiStartDone, 1);
	}

	//Stopping timer and reading time
//	XGpio_DiscreteWrite(&axi_control_timer, 2, 0x0); // Disable counter
	readTimer = XGpio_DiscreteRead(&axi_counter_timer, 1);
	fval = (float)readTimer / (float)100;
	whole = fval;
	thousandths = (fval - whole) * 1000;
	xil_printf_macro("Time took to process Keccak-f1600: %d.%03d us\n", whole, thousandths);

	//Interpret data
	while(XLlFifo_iRxOccupancy(&fifoKeccak))
	{
		// Read Receive Length
		u32 ReceiveLength;
		u32 RxWord;
		int i;
		ReceiveLength = (XLlFifo_iRxGetLen(&fifoKeccak))/4;
		xil_printf_macro("Received length: %d bytes.\n", ReceiveLength << 2);
		for (i=0; i < ReceiveLength; i++) {
			RxWord = XLlFifo_RxGetWord(&fifoKeccak);
			xil_printf_macro("\tReceived data: 0x%x\n", RxWord);
		}
	}
	int Status;
	Status = XLlFifo_IsRxDone(&fifoKeccak);
	if(Status != TRUE)
		xil_printf_macro("Failing in receive complete...\n");

	xil_printf_macro("Reception completed.\n");

	//Set start pin low
	XGpio_DiscreteWrite(&axiStartDone, 1, 0x0); // Start gpio set low

}
